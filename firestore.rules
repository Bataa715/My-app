
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users can only read and write to their own profile.
    // New user documents can be created if the document ID matches the user's UID.
    match /users/{userId} {
      allow read, update: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null && request.auth.uid == userId;
    }

    // Users can only manage their own notifications.
    match /users/{userId}/notifications/{notificationId} {
      allow read, write, delete: if request.auth != null && request.auth.uid == userId;
    }

    // Users can only manage their own saved items.
    match /users/{userId}/savedItems/{itemId} {
      allow read, write, delete: if request.auth != null && request.auth.uid == userId;
    }

    // Anyone can read global notifications, but no one can write them from the client.
    match /notifications/{notificationId} {
      allow read: if true;
      allow write: if false; // Should be managed by admin/server
    }

    // Orders can only be read/deleted by the user who created them.
    // A user can create an order only for themselves.
    match /orders/{orderId} {
      allow read, delete: if request.auth != null && get(/databases/$(database)/documents/orders/$(orderId)).data.userId == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow update: if false; // Disallow client updates for security.
    }

    // Public entries (services, hotels, etc.) can be read by anyone.
    // No one can write to them from the client side.
    match /entries/{entryId} {
      allow read: if true;
      allow create, update, delete: if false; // Should be managed by admin/server
    }

    // Reviews can be read by anyone.
    // An authenticated user can create or update their own review (doc ID must be user's UID).
    match /entries/{entryId}/reviews/{userId} {
      allow read: if true;
      allow create, update: if request.auth != null && request.auth.uid == userId
                          && request.resource.data.rating >= 1 && request.resource.data.rating <= 10;
      allow delete: if false; // Users cannot delete reviews.
    }
    
    // Cities list is public. No client-side writes.
    match /cities/{cityId} {
      allow read: if true;
      allow write: if false;
    }

    // Banners are public. No client-side writes.
    match /banners/{bannerId} {
      allow read: if true;
      allow write: if false;
    }

    // Translator application "ankets" can only be created/updated by the user themselves.
    // Only the user (and admins, via server rules) can read their own application.
    match /ankets/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow create, update: if request.auth != null && request.auth.uid == userId;
    }

    // Help items (FAQs) are public. No client-side writes.
    match /help_items/{itemId} {
      allow read: if true;
      allow write: if false;
    }
  }
}
